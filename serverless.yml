service: iotv-api

custom:
  stage: ${opt:stage}
environment:

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

provider:
  name: aws
  role: "${ssm:/services/iotv-api/${opt:stage}/LAMBDA_ROLE_ARN}"
  runtime: go1.x
  versionFunctions: false


package:
  individually: true


layers:
  ffmpeg:
    path: bin/layers/ffmpeg
    package:
      include:
        - bin/layers/ffmpeg/ffmpeg

  ffprobe:
    path: bin/layers/ffprobe
    package:
      include:
        - bin/layers/ffprobe/ffprobe

functions:
  checkSourceVideo:
    awsKmsKeyArn: "${ssm:/services/iotv-api/${opt:stage}/LAMBDA_KMS_ARN}"
    environment:
      SOURCE_VIDEOS_BUCKET: "${ssm:/services/iotv-api/${opt:stage}/SOURCE_VIDEOS_BUCKET}"
    handler: bin/check_source_video
    layers:
      - {Ref: FfprobeLambdaLayer}
    package:
      exclude:
        - ./**
      include:
        - bin/check_source_video

  graphql:
    awsKmsKeyArn: "${ssm:/services/iotv-api/${opt:stage}/LAMBDA_KMS_ARN}"
    handler: bin/graphql
    environment:
      EMAIL_AUTHENTICATIONS_TABLE: "${ssm:/services/iotv-api/${opt:stage}/EMAIL_AUTHENTICATIONS_TABLE}"
      JWT_SECRET: "${ssm:/services/iotv-api/${opt:stage}/JWT_SECRET~true}"
      SOURCE_VIDEOS_TABLE: "${ssm:/services/iotv-api/${opt:stage}/SOURCE_VIDEOS_TABLE}"
      USERS_TABLE: "${ssm:/services/iotv-api/${opt:stage}/USERS_TABLE}"
    events:
      - http:
          path: /graphql
          method: post
          cors: true
    package:
      exclude:
        - ./**
      include:
        - bin/graphql

  onVideoUploadComplete:
    awsKmsKeyArn: "${ssm:/services/iotv-api/${opt:stage}/LAMBDA_KMS_ARN}"
    handler: bin/on_video_upload_complete
    events:
      - sns:
          arn: "${ssm:/services/iotv-api/${opt:stage}/SOURCE_VIDEO_UPLOADED_ARN}"
    package:
      exclude:
        - ./**
      include:
        - bin/on_video_upload_complete

stepFunctions:
  stateMachines:
    encodeSourceVideo:
      definition:
        StartAt: checkSourceVideo
        States:
          checkSourceVideo:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-checkSourceVideo"
            Next: encodeSourceVideo
          encodeSourceVideo:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-encodeSourceVideo"
            End: true